{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["E:/project groop/06-notehub-nextjs/components/TanStackProvider/TanStackProvider.tsx"],"sourcesContent":["// components/TanStackProvider/TanStackProvider.tsx\r\n'use client'; // Цей компонент є обгорткою, яка працює на клієнті\r\n\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\r\nimport { useState } from 'react';\r\n\r\ninterface TanStackProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TanStackProvider: React.FC<TanStackProviderProps> = ({ children }) => {\r\n  // Створюємо екземпляр QueryClient.\r\n  // Використання useState гарантує, що QueryClient не буде створюватися заново при кожному рендері.\r\n  const [queryClient] = useState(() => new QueryClient({\r\n    defaultOptions: {\r\n      queries: {\r\n        staleTime: 60 * 1000,\r\n        refetchOnWindowFocus: false,\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\n  return (\r\n    // Надаємо доступ до queryClient усім дочірнім компонентам\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n      {/* Додаємо інструменти розробника для дебагінгу */}\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default TanStackProvider;"],"names":["c","_c","QueryClient","QueryClientProvider","ReactQueryDevtools","useState","TanStackProviderProps","children","React","ReactNode","TanStackProvider","FC","t0","$","$i","Symbol","for","queryClient","_temp","t1","t2","defaultOptions","queries","staleTime","refetchOnWindowFocus"],"mappings":"AAAA,mDAAA;;;;;;AACc,mDAAA;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAEd,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AACxE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,QAAQ,QAAQ,OAAO;;;AAJhC,YAAY;;;;;AAUZ,0BAA0DO,EAAA;;IAAA,MAAAC,CAAA,OAAAZ,gLAAA,EAAA;IAAA,IAAAY,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAC,MAAA,EAAAN,QAAAA,EAAA,GAAAK,EAAY;IAGrE,MAAA,CAAAK,WAAA,CAAA,OAAsBZ,yKAAQ,EAACa,KAQjC,CAAC;IAAC,IAAAC,EAAA;IAAA,IAAAN,CAAA,CAAA,EAAA,KAAAE,MAAA,CAAAC,GAAA,CAAA,8BAAA;QAOIG,EAAA,iBAAA,6LAAC,6MAAkB;YAAgB,aAAK,CAAL,CAAA,KAAI,CAAC,GAAI;;;;;;QAAAN,CAAA,CAAA,EAAA,GAAAM,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAN,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAO,EAAA;IAAA,IAAAP,CAAA,CAAA,EAAA,KAAAN,QAAA,IAAAM,CAAA,CAAA,EAAA,KAAAI,WAAA,EAAA;QAH9CG,EAAA,iBAAA,6LAAC,gNAAmB;YAASH,MAAW,CAAXA,CAAAA,WAAU,CAAC,CACrCV;;gBAAAA,QAAO,CAER;gBAAAY,EAA2C,CAC7C,EAJC,mBAAmB,CAIE;;;;;;;QAAAN,CAAA,CAAA,EAAA,GAAAN,QAAA;QAAAM,CAAA,CAAA,EAAA,GAAAI,WAAA;QAAAJ,CAAA,CAAA,EAAA,GAAAO,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAP,CAAA,CAAA,EAAA;IAAA;IAAA,OAJtBO,EAIsB;AAAA,CAEzB;;KArBKV,gBAAgB,EAAEF,KAAK,CAACG,EAAE,CAACL,qBAAqB,CAAC;uCAuBxCI,gBAAgB;AAvB2B,SAAAQ,MAAA;IAAA,OAGnB,IAAIhB,+LAAW,CAAC;QAAAmB,cAAA,EACnC;YAAAC,OAAA,EACL;gBAAAC,SAAA,EACI,KAAS;gBAAAC,oBAAA,EACE;YACxB;QACF;IACF,CAAC,CAAC;AAAA","ignoreList":[],"debugId":null}}]
}